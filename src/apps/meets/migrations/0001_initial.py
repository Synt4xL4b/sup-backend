# Generated by Django 5.1 on 2024-09-03 10:33

import django.core.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="Category",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        max_length=100,
                        unique=True,
                        validators=[
                            django.core.validators.RegexValidator(
                                code="invalid_name",
                                message="Допускаются только буквы латиницы и кириллицы.",
                                regex="^[a-zA-Zа-яА-Я\\s]*$",
                            )
                        ],
                        verbose_name="Категория",
                    ),
                ),
            ],
            options={
                "verbose_name": "Категория",
                "verbose_name_plural": "Категории",
                "db_table": "category",
                "ordering": ["name"],
            },
        ),
        migrations.CreateModel(
            name="Meet",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "title",
                    models.CharField(
                        max_length=20,
                        unique=True,
                        validators=[
                            django.core.validators.RegexValidator(
                                code="invalid_name",
                                message="Допускаются только буквы латиницы и кириллицы.",
                                regex="^[a-zA-Zа-яА-Я\\s]*$",
                            )
                        ],
                        verbose_name="Название",
                    ),
                ),
                (
                    "start_date",
                    models.DateField(
                        default=django.utils.timezone.now, verbose_name="Дата"
                    ),
                ),
                (
                    "start_time",
                    models.TimeField(
                        default=django.utils.timezone.now, verbose_name="Время"
                    ),
                ),
                (
                    "author",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="authored_meets",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Автор",
                    ),
                ),
                (
                    "category",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        to="meets.category",
                        verbose_name="Категория",
                    ),
                ),
                (
                    "responsible",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="responsible_meets",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Ответственный",
                    ),
                ),
            ],
            options={
                "verbose_name": "Мит",
                "verbose_name_plural": "Миты",
                "db_table": "meets",
                "ordering": ["start_date", "start_time", "category", "title"],
            },
        ),
        migrations.CreateModel(
            name="MeetParticipant",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("present", "Присутствует"),
                            ("absent", "Отсутствует"),
                            ("warned", "Предупредил"),
                        ],
                        default="present",
                        max_length=10,
                        verbose_name="Статус",
                    ),
                ),
                (
                    "CustomUser",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Участник",
                    ),
                ),
                (
                    "meet",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="meets.meet",
                        verbose_name="Мит",
                    ),
                ),
            ],
            options={
                "verbose_name": "Участник мита",
                "verbose_name_plural": "Участники мита",
                "db_table": "CustomUser_meet",
                "unique_together": {("meet", "CustomUser")},
            },
        ),
        migrations.AddField(
            model_name="meet",
            name="participants",
            field=models.ManyToManyField(
                related_name="meets",
                through="meets.MeetParticipant",
                to=settings.AUTH_USER_MODEL,
                verbose_name="Участники",
            ),
        ),
    ]
